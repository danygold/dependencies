<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.2//EN"
        "https://checkstyle.org/dtds/configuration_1_2.dtd">

<module name="Checker">

  <property name="charset" value="UTF-8"/>
  <property name="fileExtensions" value="java, xml, properties"/>

  <!--Check for presence of tab character-->
  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
  </module>

  <!-- Check for line length -->
  <!--<module name="LineLength">
    <property name="max" value="160"/>
  </module>-->

  <!-- There must be no trailing whitespace at the end of any line -->
  <module name="RegexpSingleline">
    <!-- \s matches whitespace character, $ matches end of line. -->
    <property name="format" value="\s+$"/>
    <property name="message" value="Line has trailing spaces."/>
  </module>

  <module name="SuppressionFilter">
    <property name="file" value="/checkstyle/checkstyle-ignore.xml"/>
    <property name="optional" value="true"/>
  </module>

  <module name="TreeWalker">
    <property name="fileExtensions" value="java"/>

    <!-- Suppression filter -->
    <module name="SuppressionCommentFilter"/>

    <!-- Redundant imports...-->
    <module name="RedundantImport"/>

    <module name="UnusedImports"/>

    <module name="IllegalImport"/>

    <module name="GenericWhitespace"/>

    <module name="MethodParamPad">
      <property name="allowLineBreaks" value="true"/>
    </module>

    <module name="ParenPad"/>

    <module name="NoWhitespaceAfter"/>
    <module name="NoWhitespaceBefore"/>

    <module name="WhitespaceAround"/>

    <!-- Modifier Checks-->
    <!-- RIGHT: public static WRONG: static public -->
    <module name="ModifierOrder"/>

    <!-- Checks for redundant modifiers in interface and annotation definitions. -->
    <!-- Ignore INTERFACE_DEF as these errors on static methods of interfaces. When Java8 supported this might improve -->
    <module name="RedundantModifier">
      <property name="tokens" value="METHOD_DEF, VARIABLE_DEF, ANNOTATION_FIELD_DEF"/>
    </module>

    <!-- Don't check brackets
    <module name="NeedBraces"/>-->

    <!-- Checks for blocks and if curly is place correctly. You know, those {}'s -->
    <module name="LeftCurly"/>
    <module name="RightCurly"/>

    <!-- Checks for common coding problems -->

    <!-- Detects empty statements (standalone ;). -->
    <module name="EmptyStatement"/>

    <!-- Checks that classes that override equals() also override hashCode(). -->
    <module name="EqualsHashCode"/>

    <module name="DefaultComesLast"/>

    <!-- Checks for illegal instantiations where an extension method is preferred -->
    <module name="IllegalInstantiation"/>

    <!-- Check for utility class that not hide default constructor -->
    <!--<module name="HideUtilityClassConstructor"/>-->

    <module name="MissingOverride"/>

    <!-- Miscellaneous other checks. -->

    <!-- Checks that long constants are defined with an upper ell. That is ' L' and not 'l'. -->
    <module name="UpperEll"/>

    <!-- This check makes sure that all package annotations are in the package-info.java file -->
    <module name="PackageAnnotation"/>

    <!-- Checks that classes that define a covariant equals() method
         also override method equals(java.lang.Object). -->
    <module name="CovariantEquals"/>

    <!-- RIGHT: int[] buff WRONG: inf buff[] -->
    <module name="ArrayTypeStyle"/>

    <module name="StringLiteralEquality"/>

    <module name="InnerTypeLast"/>

    <module name="ArrayTypeStyle"/>
  </module>

</module>